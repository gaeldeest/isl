open Ctypes
open Foreign
open IslRaw_Types

(* __isl_give isl_val *isl_val_zero(isl_ctx *ctx); *)
let zero = foreign "isl_val_zero" (ctx @-> returning value)

(* __isl_give isl_val *isl_val_one(isl_ctx *ctx); *)
let one = foreign "isl_val_one" (ctx @-> returning value)
(* __isl_give isl_val *isl_val_negone(isl_ctx *ctx); *)
let negone = foreign "isl_val_negone" (ctx @-> returning value)
(* __isl_give isl_val *isl_val_nan(isl_ctx *ctx); *)
let nan = foreign "isl_val_nan" (ctx @-> returning value)
(* __isl_give isl_val *isl_val_infty(isl_ctx *ctx); *)
let infty = foreign "isl_val_infty" (ctx @-> returning value)
(* __isl_give isl_val *isl_val_neginfty(isl_ctx *ctx); *)
let neginfty = foreign "isl_val_neginfty" (ctx @-> returning value)

(* __isl_give isl_val *isl_val_int_from_si(isl_ctx *ctx, *)
(*                long i); *)
let int_from_si = foreign "isl_val_int_from_si" (ctx @-> long @-> returning value)
(* __isl_give isl_val *isl_val_int_from_ui(isl_ctx *ctx, *)
(*         unsigned long u); *)
let int_from_ui = foreign "isl_val_int_from_ui" (ctx @-> ulong @-> returning value)
(* __isl_give isl_val *isl_val_int_from_chunks(isl_ctx *ctx, *)
(*         size_t n, size_t size, const void *chunks);       *)        
(* TODO  *)

(* __isl_give isl_val *isl_val_copy(__isl_keep isl_val *v); *)
let copy = foreign "isl_val_copy" (value @-> returning value) 
(* __isl_null isl_val *isl_val_free(__isl_take isl_val *v);    *)
let free = foreign "isl_val_free" (value @-> returning void)

(* isl_ctx *isl_val_get_ctx(__isl_keep isl_val *val); *)
let get_ctx = foreign "isl_val_get_ctx" (value @-> returning ctx)
(* long isl_val_get_num_si(__isl_keep isl_val *v);     *)
let get_num_si = foreign "isl_val_get_num_si" (value @-> returning long)
(* long isl_val_get_den_si(__isl_keep isl_val *v);     *)
let get_den_si = foreign "isl_val_get_den_si" (value @-> returning long)
(* double isl_val_get_d(__isl_keep isl_val *v);     *)
let get_d = foreign "isl_val_get_d" (value @-> returning double)
    
(* size_t isl_val_n_abs_num_chunks(__isl_keep isl_val *v, *)
(*                 size_t size);     *)
(* TODO *)
(* int isl_val_get_abs_num_chunks(__isl_keep isl_val *v, *)
(*                 size_t size, void *chunks);     *)
(* TODO *)

(* __isl_give isl_val *isl_val_set_si(__isl_take isl_val *v, long i); *)
let set_si = foreign "isl_val_set_si" (value @-> long @-> returning value)

(* int isl_val_sgn(__isl_keep isl_val *v); *)
let sgn = foreign "isl_val_sgn" (value @-> returning int)
(* int isl_val_is_zero(__isl_keep isl_val *v);     *)
let is_zero = foreign "isl_val_is_zero" (value @-> returning bool)
(* int isl_val_is_one(__isl_keep isl_val *v);     *)
let is_one = foreign "isl_val_is_one" (value @-> returning bool)
(* int isl_val_is_negone(__isl_keep isl_val *v);     *)
let is_negone = foreign "isl_val_is_negone" (value @-> returning bool)
(* int isl_val_is_nonneg(__isl_keep isl_val *v);     *)
let is_nonneg = foreign "isl_val_is_nonneg" (value @-> returning bool)
(* int isl_val_is_nonpos(__isl_keep isl_val *v);     *)
let is_nonpos = foreign "isl_val_is_nonpos" (value @-> returning bool)
(* int isl_val_is_pos(__isl_keep isl_val *v);     *)
let is_pos = foreign "isl_val_is_pos" (value @-> returning bool)
(* int isl_val_is_neg(__isl_keep isl_val *v);     *)
let is_neg = foreign "isl_val_is_neg" (value @-> returning bool)
(* int isl_val_is_int(__isl_keep isl_val *v);     *)
let is_int = foreign "isl_val_is_int" (value @-> returning bool)
(* int isl_val_is_rat(__isl_keep isl_val *v);     *)
let is_rat = foreign "isl_val_is_rat" (value @-> returning bool)
(* int isl_val_is_nan(__isl_keep isl_val *v);     *)
let is_nan = foreign "isl_val_is_nan" (value @-> returning bool)
(* int isl_val_is_infty(__isl_keep isl_val *v);     *)
let is_infty = foreign "isl_val_is_infty" (value @-> returning bool)
(* int isl_val_is_neginfty(__isl_keep isl_val *v);     *)
let is_neginfty = foreign "isl_val_is_neginfty" (value @-> returning bool)


(* int isl_val_lt(__isl_keep isl_val *v1, __isl_keep isl_val *v2);   *)
let lt = foreign "isl_val_lt" (value @-> value @-> returning bool)
(* int isl_val_le(__isl_keep isl_val *v1, __isl_keep isl_val *v2);       *)
let le = foreign "isl_val_le" (value @-> value @-> returning bool)
(* int isl_val_gt(__isl_keep isl_val *v1, __isl_keep isl_val *v2); *)
let gt = foreign "isl_val_gt" (value @-> value @-> returning bool)
(* int isl_val_ge(__isl_keep isl_val *v1, __isl_keep isl_val *v2);       *)
let ge = foreign "isl_val_ge" (value @-> value @-> returning bool)
(* int isl_val_eq(__isl_keep isl_val *v1, __isl_keep isl_val *v2); *)
let eq = foreign "isl_val_eq" (value @-> value @-> returning bool)
(* int isl_val_ne(__isl_keep isl_val *v1, __isl_keep isl_val *v2); *)
let ne = foreign "isl_val_ne" (value @-> value @-> returning bool)    

(* int isl_val_is_divisible_by(__isl_keep isl_val *v1, __isl_keep isl_val *v2); *)
let is_divisible_by = foreign "isl_val_is_divisible_by" (value @-> value @-> returning bool)
(* int isl_val_cmp_si(__isl_keep isl_val *v, long i); *)
let cmp_si = foreign "isl_val_cmp_si" (value @-> long @-> returning int)
    
(* __isl_give isl_val *isl_val_abs(__isl_take isl_val *v); *)
let abs = foreign "isl_val_abs" (value @-> returning value)
(* __isl_give isl_val *isl_val_neg(__isl_take isl_val *v); *)
let neg = foreign "isl_val_neg" (value @-> returning value)    
(* __isl_give isl_val *isl_val_floor(__isl_take isl_val *v); *)
let floor = foreign "isl_val_floor" (value @-> returning value)    
(* __isl_give isl_val *isl_val_ceil(__isl_take isl_val *v); *)
let ceil = foreign "isl_val_ceil" (value @-> returning value)    
(* __isl_give isl_val *isl_val_trunc(__isl_take isl_val *v); *)
let trunc = foreign "isl_val_trunc" (value @-> returning value)    
(* __isl_give isl_val *isl_val_2exp(__isl_take isl_val *v); *)
let two_exp = foreign "isl_val_2exp" (value @-> returning value)

(* __isl_give isl_val *isl_val_min(__isl_take isl_val *v1, __isl_take isl_val *v2); *)
let min = foreign "isl_val_min" (value @-> value @-> returning value)
(* __isl_give isl_val *isl_val_max(__isl_take isl_val *v1, __isl_take isl_val *v2); *)
let max = foreign "isl_val_max" (value @-> value @-> returning value)    
(* __isl_give isl_val *isl_val_add(__isl_take isl_val *v1, __isl_take isl_val *v2); *)
let add = foreign "isl_val_add" (value @-> value @-> returning value)        
(* __isl_give isl_val *isl_val_add_ui(__isl_take isl_val *v1, unsigned long v2); *)
let add_ui = foreign "isl_val_add_ui" (value @-> ulong @-> returning value)            
(* __isl_give isl_val *isl_val_sub(__isl_take isl_val *v1, __isl_take isl_val *v2); *)
let sub = foreign "isl_val_sub" (value @-> value @-> returning value)
(* __isl_give isl_val *isl_val_sub_ui(__isl_take isl_val *v1, unsigned long v2); *)
let sub_ui = foreign "isl_val_sub_ui" (value @-> ulong @-> returning value)                
(* __isl_give isl_val *isl_val_mul(__isl_take isl_val *v1, __isl_take isl_val *v2); *)
let mul = foreign "isl_val_mul" (value @-> value @-> returning value)            
(* __isl_give isl_val *isl_val_mul_ui(__isl_take isl_val *v1, unsigned long v2); *)
let mul_ui = foreign "isl_val_mul_ui" (value @-> ulong @-> returning value)                
(* __isl_give isl_val *isl_val_div(__isl_take isl_val *v1, __isl_take isl_val *v2); *)
let div = foreign "isl_val_div" (value @-> value @-> returning value)

(* __isl_give isl_val *isl_val_mod(__isl_take isl_val *v1, __isl_take isl_val *v2); *)
let modulo = foreign "isl_val_mod" (value @-> value @-> returning value)
(* __isl_give isl_val *isl_val_gcd(__isl_take isl_val *v1, __isl_take isl_val *v2); *)
let gcd = foreign "isl_val_gcd" (value @-> value @-> returning value)
(* __isl_give isl_val *isl_val_gcdext(__isl_take isl_val *v1, __isl_take isl_val *v2, __isl_give isl_val **x, __isl_give isl_val **y); *)
let gcdext = foreign "isl_val_gcdext" (value @-> value @-> ptr value @-> ptr value @-> returning value)
