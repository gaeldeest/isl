"IslRaw_Space.ml" 6 117 121 "IslRaw_Space.ml" 6 117 125
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def copy "IslRaw_Space.ml" 8 258 258 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 6 117 128 "IslRaw_Space.ml" 6 117 135
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 6 117 136 "IslRaw_Space.ml" 6 117 152
type(
  string
)
"IslRaw_Space.ml" 6 117 154 "IslRaw_Space.ml" 6 117 159
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 6 117 160 "IslRaw_Space.ml" 6 117 163
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 6 117 164 "IslRaw_Space.ml" 6 117 173
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 6 117 174 "IslRaw_Space.ml" 6 117 179
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 6 117 164 "IslRaw_Space.ml" 6 117 179
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 6 117 153 "IslRaw_Space.ml" 6 117 180
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 6 117 128 "IslRaw_Space.ml" 6 117 180
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 8 258 262 "IslRaw_Space.ml" 8 258 266
type(
  IslRaw_Types.space -> unit
)
ident(
  def free "IslRaw_Space.ml" 11 429 429 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 8 258 269 "IslRaw_Space.ml" 8 258 276
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> unit) Ctypes.fn -> IslRaw_Types.space -> unit
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 8 258 277 "IslRaw_Space.ml" 8 258 293
type(
  string
)
"IslRaw_Space.ml" 8 258 295 "IslRaw_Space.ml" 8 258 300
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 8 258 301 "IslRaw_Space.ml" 8 258 304
type(
  IslRaw_Types.space Ctypes.typ ->
  unit Ctypes.fn -> (IslRaw_Types.space -> unit) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 8 258 305 "IslRaw_Space.ml" 8 258 314
type(
  unit Ctypes.typ -> unit Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 8 258 315 "IslRaw_Space.ml" 8 258 319
type(
  unit Ctypes.typ
)
ident(
  ext_ref Ctypes.void
)
"IslRaw_Space.ml" 8 258 305 "IslRaw_Space.ml" 8 258 319
call(
  stack
)
type(
  unit Ctypes.fn
)
"IslRaw_Space.ml" 8 258 294 "IslRaw_Space.ml" 8 258 320
call(
  stack
)
type(
  (IslRaw_Types.space -> unit) Ctypes.fn
)
"IslRaw_Space.ml" 8 258 269 "IslRaw_Space.ml" 8 258 320
call(
  stack
)
type(
  IslRaw_Types.space -> unit
)
"IslRaw_Space.ml" 11 429 433 "IslRaw_Space.ml" 11 429 438
type(
  IslRaw_Types.ctx ->
  Unsigned.uint -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  def alloc "IslRaw_Space.ml" 13 603 603 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 11 429 441 "IslRaw_Space.ml" 11 429 448
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.ctx ->
   Unsigned.uint -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.ctx ->
  Unsigned.uint -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 11 429 449 "IslRaw_Space.ml" 11 429 466
type(
  string
)
"IslRaw_Space.ml" 11 429 468 "IslRaw_Space.ml" 11 429 471
type(
  IslRaw_Types.ctx Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.ctx
)
"IslRaw_Space.ml" 11 429 472 "IslRaw_Space.ml" 11 429 475
type(
  IslRaw_Types.ctx Ctypes.typ ->
  (Unsigned.uint -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  (IslRaw_Types.ctx ->
   Unsigned.uint -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 11 429 476 "IslRaw_Space.ml" 11 429 480
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 11 429 481 "IslRaw_Space.ml" 11 429 484
type(
  Unsigned.uint Ctypes.typ ->
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (Unsigned.uint -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 11 429 485 "IslRaw_Space.ml" 11 429 489
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 11 429 490 "IslRaw_Space.ml" 11 429 493
type(
  Unsigned.uint Ctypes.typ ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 11 429 494 "IslRaw_Space.ml" 11 429 498
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 11 429 499 "IslRaw_Space.ml" 11 429 502
type(
  Unsigned.uint Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 11 429 503 "IslRaw_Space.ml" 11 429 512
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 11 429 513 "IslRaw_Space.ml" 11 429 518
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 11 429 503 "IslRaw_Space.ml" 11 429 518
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 11 429 494 "IslRaw_Space.ml" 11 429 518
call(
  stack
)
type(
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 11 429 485 "IslRaw_Space.ml" 11 429 518
call(
  stack
)
type(
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 11 429 476 "IslRaw_Space.ml" 11 429 518
call(
  stack
)
type(
  (Unsigned.uint -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 11 429 467 "IslRaw_Space.ml" 11 429 519
call(
  stack
)
type(
  (IslRaw_Types.ctx ->
   Unsigned.uint -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 11 429 441 "IslRaw_Space.ml" 11 429 519
call(
  stack
)
type(
  IslRaw_Types.ctx ->
  Unsigned.uint -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
"IslRaw_Space.ml" 13 603 607 "IslRaw_Space.ml" 13 603 619
type(
  IslRaw_Types.ctx -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  def params_alloc "IslRaw_Space.ml" 15 792 792 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 13 603 622 "IslRaw_Space.ml" 13 603 629
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.ctx -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.ctx -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 13 603 630 "IslRaw_Space.ml" 13 603 654
type(
  string
)
"IslRaw_Space.ml" 13 603 656 "IslRaw_Space.ml" 13 603 659
type(
  IslRaw_Types.ctx Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.ctx
)
"IslRaw_Space.ml" 13 603 660 "IslRaw_Space.ml" 13 603 663
type(
  IslRaw_Types.ctx Ctypes.typ ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.ctx -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 13 603 664 "IslRaw_Space.ml" 13 603 668
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 13 603 669 "IslRaw_Space.ml" 13 603 672
type(
  Unsigned.uint Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 13 603 673 "IslRaw_Space.ml" 13 603 682
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 13 603 683 "IslRaw_Space.ml" 13 603 688
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 13 603 673 "IslRaw_Space.ml" 13 603 688
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 13 603 664 "IslRaw_Space.ml" 13 603 688
call(
  stack
)
type(
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 13 603 655 "IslRaw_Space.ml" 13 603 689
call(
  stack
)
type(
  (IslRaw_Types.ctx -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 13 603 622 "IslRaw_Space.ml" 13 603 689
call(
  stack
)
type(
  IslRaw_Types.ctx -> Unsigned.uint -> IslRaw_Types.space
)
"IslRaw_Space.ml" 15 792 796 "IslRaw_Space.ml" 15 792 805
type(
  IslRaw_Types.ctx -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  def set_alloc "IslRaw_Space.ml" 18 966 966 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 15 792 808 "IslRaw_Space.ml" 15 792 815
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.ctx -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.ctx -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 15 792 816 "IslRaw_Space.ml" 15 792 837
type(
  string
)
"IslRaw_Space.ml" 15 792 839 "IslRaw_Space.ml" 15 792 842
type(
  IslRaw_Types.ctx Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.ctx
)
"IslRaw_Space.ml" 15 792 843 "IslRaw_Space.ml" 15 792 846
type(
  IslRaw_Types.ctx Ctypes.typ ->
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.ctx -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 15 792 847 "IslRaw_Space.ml" 15 792 851
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 15 792 852 "IslRaw_Space.ml" 15 792 855
type(
  Unsigned.uint Ctypes.typ ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 15 792 856 "IslRaw_Space.ml" 15 792 860
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 15 792 861 "IslRaw_Space.ml" 15 792 864
type(
  Unsigned.uint Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 15 792 865 "IslRaw_Space.ml" 15 792 874
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 15 792 875 "IslRaw_Space.ml" 15 792 880
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 15 792 865 "IslRaw_Space.ml" 15 792 880
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 15 792 856 "IslRaw_Space.ml" 15 792 880
call(
  stack
)
type(
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 15 792 847 "IslRaw_Space.ml" 15 792 880
call(
  stack
)
type(
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 15 792 838 "IslRaw_Space.ml" 15 792 881
call(
  stack
)
type(
  (IslRaw_Types.ctx -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 15 792 808 "IslRaw_Space.ml" 15 792 881
call(
  stack
)
type(
  IslRaw_Types.ctx -> Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
"IslRaw_Space.ml" 18 966 970 "IslRaw_Space.ml" 18 966 973
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint
)
ident(
  def dim "IslRaw_Space.ml" 21 1101 1101 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 18 966 976 "IslRaw_Space.ml" 18 966 983
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 18 966 984 "IslRaw_Space.ml" 18 966 999
type(
  string
)
"IslRaw_Space.ml" 18 966 1001 "IslRaw_Space.ml" 18 966 1006
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 18 966 1007 "IslRaw_Space.ml" 18 966 1010
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> Unsigned.uint) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 18 966 1011 "IslRaw_Space.ml" 18 966 1019
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 18 966 1020 "IslRaw_Space.ml" 18 966 1023
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  Unsigned.uint Ctypes.fn ->
  (IslRaw_Types.dim_type -> Unsigned.uint) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 18 966 1024 "IslRaw_Space.ml" 18 966 1033
type(
  Unsigned.uint Ctypes.typ -> Unsigned.uint Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 18 966 1034 "IslRaw_Space.ml" 18 966 1038
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 18 966 1024 "IslRaw_Space.ml" 18 966 1038
call(
  stack
)
type(
  Unsigned.uint Ctypes.fn
)
"IslRaw_Space.ml" 18 966 1011 "IslRaw_Space.ml" 18 966 1038
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> Unsigned.uint) Ctypes.fn
)
"IslRaw_Space.ml" 18 966 1000 "IslRaw_Space.ml" 18 966 1039
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint) Ctypes.fn
)
"IslRaw_Space.ml" 18 966 976 "IslRaw_Space.ml" 18 966 1039
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint
)
"IslRaw_Space.ml" 21 1101 1105 "IslRaw_Space.ml" 21 1101 1114
type(
  IslRaw_Types.space -> bool
)
ident(
  def is_params "IslRaw_Space.ml" 23 1231 1231 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 21 1101 1117 "IslRaw_Space.ml" 21 1101 1124
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> bool) Ctypes.fn -> IslRaw_Types.space -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 21 1101 1125 "IslRaw_Space.ml" 21 1101 1146
type(
  string
)
"IslRaw_Space.ml" 21 1101 1148 "IslRaw_Space.ml" 21 1101 1153
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 21 1101 1154 "IslRaw_Space.ml" 21 1101 1157
type(
  IslRaw_Types.space Ctypes.typ ->
  bool Ctypes.fn -> (IslRaw_Types.space -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 21 1101 1158 "IslRaw_Space.ml" 21 1101 1167
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 21 1101 1168 "IslRaw_Space.ml" 21 1101 1172
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 21 1101 1158 "IslRaw_Space.ml" 21 1101 1172
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 21 1101 1147 "IslRaw_Space.ml" 21 1101 1173
call(
  stack
)
type(
  (IslRaw_Types.space -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 21 1101 1117 "IslRaw_Space.ml" 21 1101 1173
call(
  stack
)
type(
  IslRaw_Types.space -> bool
)
"IslRaw_Space.ml" 23 1231 1235 "IslRaw_Space.ml" 23 1231 1241
type(
  IslRaw_Types.space -> bool
)
ident(
  def is_set "IslRaw_Space.ml" 25 1359 1359 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 23 1231 1244 "IslRaw_Space.ml" 23 1231 1251
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> bool) Ctypes.fn -> IslRaw_Types.space -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 23 1231 1252 "IslRaw_Space.ml" 23 1231 1270
type(
  string
)
"IslRaw_Space.ml" 23 1231 1272 "IslRaw_Space.ml" 23 1231 1277
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 23 1231 1278 "IslRaw_Space.ml" 23 1231 1281
type(
  IslRaw_Types.space Ctypes.typ ->
  bool Ctypes.fn -> (IslRaw_Types.space -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 23 1231 1282 "IslRaw_Space.ml" 23 1231 1291
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 23 1231 1292 "IslRaw_Space.ml" 23 1231 1296
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 23 1231 1282 "IslRaw_Space.ml" 23 1231 1296
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 23 1231 1271 "IslRaw_Space.ml" 23 1231 1297
call(
  stack
)
type(
  (IslRaw_Types.space -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 23 1231 1244 "IslRaw_Space.ml" 23 1231 1297
call(
  stack
)
type(
  IslRaw_Types.space -> bool
)
"IslRaw_Space.ml" 25 1359 1363 "IslRaw_Space.ml" 25 1359 1369
type(
  IslRaw_Types.space -> bool
)
ident(
  def is_map "IslRaw_Space.ml" 28 1517 1517 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 25 1359 1372 "IslRaw_Space.ml" 25 1359 1379
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> bool) Ctypes.fn -> IslRaw_Types.space -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 25 1359 1380 "IslRaw_Space.ml" 25 1359 1398
type(
  string
)
"IslRaw_Space.ml" 25 1359 1400 "IslRaw_Space.ml" 25 1359 1405
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 25 1359 1406 "IslRaw_Space.ml" 25 1359 1409
type(
  IslRaw_Types.space Ctypes.typ ->
  bool Ctypes.fn -> (IslRaw_Types.space -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 25 1359 1410 "IslRaw_Space.ml" 25 1359 1419
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 25 1359 1420 "IslRaw_Space.ml" 25 1359 1424
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 25 1359 1410 "IslRaw_Space.ml" 25 1359 1424
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 25 1359 1399 "IslRaw_Space.ml" 25 1359 1425
call(
  stack
)
type(
  (IslRaw_Types.space -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 25 1359 1372 "IslRaw_Space.ml" 25 1359 1425
call(
  stack
)
type(
  IslRaw_Types.space -> bool
)
"IslRaw_Space.ml" 28 1517 1521 "IslRaw_Space.ml" 28 1517 1529
type(
  IslRaw_Types.space -> IslRaw_Types.space -> bool
)
ident(
  def is_equal "IslRaw_Space.ml" 30 1689 1689 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 28 1517 1532 "IslRaw_Space.ml" 28 1517 1539
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space -> bool) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 28 1517 1540 "IslRaw_Space.ml" 28 1517 1560
type(
  string
)
"IslRaw_Space.ml" 28 1517 1562 "IslRaw_Space.ml" 28 1517 1567
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 28 1517 1568 "IslRaw_Space.ml" 28 1517 1571
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.space -> bool) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 28 1517 1572 "IslRaw_Space.ml" 28 1517 1577
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 28 1517 1578 "IslRaw_Space.ml" 28 1517 1581
type(
  IslRaw_Types.space Ctypes.typ ->
  bool Ctypes.fn -> (IslRaw_Types.space -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 28 1517 1582 "IslRaw_Space.ml" 28 1517 1591
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 28 1517 1592 "IslRaw_Space.ml" 28 1517 1596
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 28 1517 1582 "IslRaw_Space.ml" 28 1517 1596
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 28 1517 1572 "IslRaw_Space.ml" 28 1517 1596
call(
  stack
)
type(
  (IslRaw_Types.space -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 28 1517 1561 "IslRaw_Space.ml" 28 1517 1597
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 28 1517 1532 "IslRaw_Space.ml" 28 1517 1597
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space -> bool
)
"IslRaw_Space.ml" 30 1689 1693 "IslRaw_Space.ml" 30 1689 1702
type(
  IslRaw_Types.space -> IslRaw_Types.space -> bool
)
ident(
  def is_domain "IslRaw_Space.ml" 32 1862 1862 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 30 1689 1705 "IslRaw_Space.ml" 30 1689 1712
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space -> bool) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 30 1689 1713 "IslRaw_Space.ml" 30 1689 1734
type(
  string
)
"IslRaw_Space.ml" 30 1689 1736 "IslRaw_Space.ml" 30 1689 1741
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 30 1689 1742 "IslRaw_Space.ml" 30 1689 1745
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.space -> bool) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 30 1689 1746 "IslRaw_Space.ml" 30 1689 1751
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 30 1689 1752 "IslRaw_Space.ml" 30 1689 1755
type(
  IslRaw_Types.space Ctypes.typ ->
  bool Ctypes.fn -> (IslRaw_Types.space -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 30 1689 1756 "IslRaw_Space.ml" 30 1689 1765
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 30 1689 1766 "IslRaw_Space.ml" 30 1689 1770
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 30 1689 1756 "IslRaw_Space.ml" 30 1689 1770
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 30 1689 1746 "IslRaw_Space.ml" 30 1689 1770
call(
  stack
)
type(
  (IslRaw_Types.space -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 30 1689 1735 "IslRaw_Space.ml" 30 1689 1771
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 30 1689 1705 "IslRaw_Space.ml" 30 1689 1771
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space -> bool
)
"IslRaw_Space.ml" 32 1862 1866 "IslRaw_Space.ml" 32 1862 1874
type(
  IslRaw_Types.space -> IslRaw_Types.space -> bool
)
ident(
  def is_range "IslRaw_Space.ml" 34 2089 2089 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 32 1862 1877 "IslRaw_Space.ml" 32 1862 1884
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space -> bool) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 32 1862 1885 "IslRaw_Space.ml" 32 1862 1905
type(
  string
)
"IslRaw_Space.ml" 32 1862 1907 "IslRaw_Space.ml" 32 1862 1912
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 32 1862 1913 "IslRaw_Space.ml" 32 1862 1916
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.space -> bool) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 32 1862 1917 "IslRaw_Space.ml" 32 1862 1922
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 32 1862 1923 "IslRaw_Space.ml" 32 1862 1926
type(
  IslRaw_Types.space Ctypes.typ ->
  bool Ctypes.fn -> (IslRaw_Types.space -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 32 1862 1927 "IslRaw_Space.ml" 32 1862 1936
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 32 1862 1937 "IslRaw_Space.ml" 32 1862 1941
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 32 1862 1927 "IslRaw_Space.ml" 32 1862 1941
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 32 1862 1917 "IslRaw_Space.ml" 32 1862 1941
call(
  stack
)
type(
  (IslRaw_Types.space -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 32 1862 1906 "IslRaw_Space.ml" 32 1862 1942
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 32 1862 1877 "IslRaw_Space.ml" 32 1862 1942
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space -> bool
)
"IslRaw_Space.ml" 34 2089 2093 "IslRaw_Space.ml" 34 2089 2107
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> bool
)
ident(
  def tuple_is_equal "IslRaw_Space.ml" 38 2354 2354 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 34 2089 2110 "IslRaw_Space.ml" 34 2089 2117
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   IslRaw_Types.space -> IslRaw_Types.dim_type -> bool)
  Ctypes.fn ->
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 34 2089 2118 "IslRaw_Space.ml" 34 2089 2144
type(
  string
)
"IslRaw_Space.ml" 34 2089 2146 "IslRaw_Space.ml" 34 2089 2151
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 34 2089 2152 "IslRaw_Space.ml" 34 2089 2155
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type ->
   IslRaw_Types.space -> IslRaw_Types.dim_type -> bool)
  Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   IslRaw_Types.space -> IslRaw_Types.dim_type -> bool)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 34 2089 2156 "IslRaw_Space.ml" 34 2089 2164
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 34 2089 2165 "IslRaw_Space.ml" 34 2089 2168
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> bool) Ctypes.fn ->
  (IslRaw_Types.dim_type ->
   IslRaw_Types.space -> IslRaw_Types.dim_type -> bool)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 34 2089 2169 "IslRaw_Space.ml" 34 2089 2174
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 34 2089 2175 "IslRaw_Space.ml" 34 2089 2178
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> bool) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 34 2089 2179 "IslRaw_Space.ml" 34 2089 2187
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 34 2089 2188 "IslRaw_Space.ml" 34 2089 2191
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  bool Ctypes.fn -> (IslRaw_Types.dim_type -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 34 2089 2192 "IslRaw_Space.ml" 34 2089 2201
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 34 2089 2202 "IslRaw_Space.ml" 34 2089 2206
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 34 2089 2192 "IslRaw_Space.ml" 34 2089 2206
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 34 2089 2179 "IslRaw_Space.ml" 34 2089 2206
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 34 2089 2169 "IslRaw_Space.ml" 34 2089 2206
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 34 2089 2156 "IslRaw_Space.ml" 34 2089 2206
call(
  stack
)
type(
  (IslRaw_Types.dim_type ->
   IslRaw_Types.space -> IslRaw_Types.dim_type -> bool)
  Ctypes.fn
)
"IslRaw_Space.ml" 34 2089 2145 "IslRaw_Space.ml" 34 2089 2207
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   IslRaw_Types.space -> IslRaw_Types.dim_type -> bool)
  Ctypes.fn
)
"IslRaw_Space.ml" 34 2089 2110 "IslRaw_Space.ml" 34 2089 2207
call(
  stack
)
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> bool
)
"IslRaw_Space.ml" 38 2354 2358 "IslRaw_Space.ml" 38 2354 2368
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space
)
ident(
  def set_dim_id "IslRaw_Space.ml" 40 2558 2558 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 38 2354 2371 "IslRaw_Space.ml" 38 2354 2378
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 38 2354 2379 "IslRaw_Space.ml" 38 2354 2401
type(
  string
)
"IslRaw_Space.ml" 38 2354 2403 "IslRaw_Space.ml" 38 2354 2408
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 38 2354 2409 "IslRaw_Space.ml" 38 2354 2412
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space)
  Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 38 2354 2413 "IslRaw_Space.ml" 38 2354 2421
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 38 2354 2422 "IslRaw_Space.ml" 38 2354 2425
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 38 2354 2426 "IslRaw_Space.ml" 38 2354 2430
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 38 2354 2431 "IslRaw_Space.ml" 38 2354 2434
type(
  Unsigned.uint Ctypes.typ ->
  (IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn ->
  (Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 38 2354 2435 "IslRaw_Space.ml" 38 2354 2437
type(
  IslRaw_Types.id Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.id
)
"IslRaw_Space.ml" 38 2354 2438 "IslRaw_Space.ml" 38 2354 2441
type(
  IslRaw_Types.id Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 38 2354 2442 "IslRaw_Space.ml" 38 2354 2451
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 38 2354 2452 "IslRaw_Space.ml" 38 2354 2457
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 38 2354 2442 "IslRaw_Space.ml" 38 2354 2457
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 38 2354 2435 "IslRaw_Space.ml" 38 2354 2457
call(
  stack
)
type(
  (IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 38 2354 2426 "IslRaw_Space.ml" 38 2354 2457
call(
  stack
)
type(
  (Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 38 2354 2413 "IslRaw_Space.ml" 38 2354 2457
call(
  stack
)
type(
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 38 2354 2402 "IslRaw_Space.ml" 38 2354 2458
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 38 2354 2371 "IslRaw_Space.ml" 38 2354 2458
call(
  stack
)
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> IslRaw_Types.id -> IslRaw_Types.space
)
"IslRaw_Space.ml" 40 2558 2562 "IslRaw_Space.ml" 40 2558 2572
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool
)
ident(
  def has_dim_id "IslRaw_Space.ml" 42 2769 2769 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 40 2558 2575 "IslRaw_Space.ml" 40 2558 2582
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool)
  Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 40 2558 2583 "IslRaw_Space.ml" 40 2558 2605
type(
  string
)
"IslRaw_Space.ml" 40 2558 2607 "IslRaw_Space.ml" 40 2558 2612
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 40 2558 2613 "IslRaw_Space.ml" 40 2558 2616
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> bool) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 40 2558 2617 "IslRaw_Space.ml" 40 2558 2625
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 40 2558 2626 "IslRaw_Space.ml" 40 2558 2629
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint -> bool) Ctypes.fn ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 40 2558 2630 "IslRaw_Space.ml" 40 2558 2634
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 40 2558 2635 "IslRaw_Space.ml" 40 2558 2638
type(
  Unsigned.uint Ctypes.typ ->
  bool Ctypes.fn -> (Unsigned.uint -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 40 2558 2639 "IslRaw_Space.ml" 40 2558 2648
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 40 2558 2649 "IslRaw_Space.ml" 40 2558 2653
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 40 2558 2639 "IslRaw_Space.ml" 40 2558 2653
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 40 2558 2630 "IslRaw_Space.ml" 40 2558 2653
call(
  stack
)
type(
  (Unsigned.uint -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 40 2558 2617 "IslRaw_Space.ml" 40 2558 2653
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> Unsigned.uint -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 40 2558 2606 "IslRaw_Space.ml" 40 2558 2654
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool)
  Ctypes.fn
)
"IslRaw_Space.ml" 40 2558 2575 "IslRaw_Space.ml" 40 2558 2654
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool
)
"IslRaw_Space.ml" 42 2769 2773 "IslRaw_Space.ml" 42 2769 2783
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.id
)
ident(
  def get_dim_id "IslRaw_Space.ml" 44 3012 3012 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 42 2769 2786 "IslRaw_Space.ml" 42 2769 2793
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.id)
  Ctypes.fn ->
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.id
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 42 2769 2794 "IslRaw_Space.ml" 42 2769 2816
type(
  string
)
"IslRaw_Space.ml" 42 2769 2818 "IslRaw_Space.ml" 42 2769 2823
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 42 2769 2824 "IslRaw_Space.ml" 42 2769 2827
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.id) Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.id)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 42 2769 2828 "IslRaw_Space.ml" 42 2769 2836
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 42 2769 2837 "IslRaw_Space.ml" 42 2769 2840
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint -> IslRaw_Types.id) Ctypes.fn ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.id) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 42 2769 2841 "IslRaw_Space.ml" 42 2769 2845
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 42 2769 2846 "IslRaw_Space.ml" 42 2769 2849
type(
  Unsigned.uint Ctypes.typ ->
  IslRaw_Types.id Ctypes.fn -> (Unsigned.uint -> IslRaw_Types.id) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 42 2769 2850 "IslRaw_Space.ml" 42 2769 2859
type(
  IslRaw_Types.id Ctypes.typ -> IslRaw_Types.id Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 42 2769 2860 "IslRaw_Space.ml" 42 2769 2862
type(
  IslRaw_Types.id Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.id
)
"IslRaw_Space.ml" 42 2769 2850 "IslRaw_Space.ml" 42 2769 2862
call(
  stack
)
type(
  IslRaw_Types.id Ctypes.fn
)
"IslRaw_Space.ml" 42 2769 2841 "IslRaw_Space.ml" 42 2769 2862
call(
  stack
)
type(
  (Unsigned.uint -> IslRaw_Types.id) Ctypes.fn
)
"IslRaw_Space.ml" 42 2769 2828 "IslRaw_Space.ml" 42 2769 2862
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.id) Ctypes.fn
)
"IslRaw_Space.ml" 42 2769 2817 "IslRaw_Space.ml" 42 2769 2863
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.id)
  Ctypes.fn
)
"IslRaw_Space.ml" 42 2769 2786 "IslRaw_Space.ml" 42 2769 2863
call(
  stack
)
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.id
)
"IslRaw_Space.ml" 44 3012 3016 "IslRaw_Space.ml" 44 3012 3028
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> string -> IslRaw_Types.space
)
ident(
  def set_dim_name "IslRaw_Space.ml" 46 3226 3226 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 44 3012 3031 "IslRaw_Space.ml" 44 3012 3038
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> string -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> string -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 44 3012 3039 "IslRaw_Space.ml" 44 3012 3063
type(
  string
)
"IslRaw_Space.ml" 44 3012 3065 "IslRaw_Space.ml" 44 3012 3070
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 44 3012 3071 "IslRaw_Space.ml" 44 3012 3074
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> string -> IslRaw_Types.space)
  Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> string -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 44 3012 3075 "IslRaw_Space.ml" 44 3012 3083
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 44 3012 3084 "IslRaw_Space.ml" 44 3012 3087
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint -> string -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> string -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 44 3012 3088 "IslRaw_Space.ml" 44 3012 3092
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 44 3012 3093 "IslRaw_Space.ml" 44 3012 3096
type(
  Unsigned.uint Ctypes.typ ->
  (string -> IslRaw_Types.space) Ctypes.fn ->
  (Unsigned.uint -> string -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 44 3012 3097 "IslRaw_Space.ml" 44 3012 3103
type(
  string Ctypes.typ
)
ident(
  ext_ref Ctypes.string
)
"IslRaw_Space.ml" 44 3012 3104 "IslRaw_Space.ml" 44 3012 3107
type(
  string Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn -> (string -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 44 3012 3108 "IslRaw_Space.ml" 44 3012 3117
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 44 3012 3118 "IslRaw_Space.ml" 44 3012 3123
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 44 3012 3108 "IslRaw_Space.ml" 44 3012 3123
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 44 3012 3097 "IslRaw_Space.ml" 44 3012 3123
call(
  stack
)
type(
  (string -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 44 3012 3088 "IslRaw_Space.ml" 44 3012 3123
call(
  stack
)
type(
  (Unsigned.uint -> string -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 44 3012 3075 "IslRaw_Space.ml" 44 3012 3123
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> Unsigned.uint -> string -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 44 3012 3064 "IslRaw_Space.ml" 44 3012 3124
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> string -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 44 3012 3031 "IslRaw_Space.ml" 44 3012 3124
call(
  stack
)
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> string -> IslRaw_Types.space
)
"IslRaw_Space.ml" 46 3226 3230 "IslRaw_Space.ml" 46 3226 3242
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool
)
ident(
  def has_dim_name "IslRaw_Space.ml" 48 3447 3447 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 46 3226 3245 "IslRaw_Space.ml" 46 3226 3252
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool)
  Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 46 3226 3253 "IslRaw_Space.ml" 46 3226 3277
type(
  string
)
"IslRaw_Space.ml" 46 3226 3279 "IslRaw_Space.ml" 46 3226 3284
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 46 3226 3285 "IslRaw_Space.ml" 46 3226 3288
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> bool) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 46 3226 3289 "IslRaw_Space.ml" 46 3226 3297
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 46 3226 3298 "IslRaw_Space.ml" 46 3226 3301
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint -> bool) Ctypes.fn ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 46 3226 3302 "IslRaw_Space.ml" 46 3226 3306
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 46 3226 3307 "IslRaw_Space.ml" 46 3226 3310
type(
  Unsigned.uint Ctypes.typ ->
  bool Ctypes.fn -> (Unsigned.uint -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 46 3226 3311 "IslRaw_Space.ml" 46 3226 3320
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 46 3226 3321 "IslRaw_Space.ml" 46 3226 3325
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 46 3226 3311 "IslRaw_Space.ml" 46 3226 3325
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 46 3226 3302 "IslRaw_Space.ml" 46 3226 3325
call(
  stack
)
type(
  (Unsigned.uint -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 46 3226 3289 "IslRaw_Space.ml" 46 3226 3325
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> Unsigned.uint -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 46 3226 3278 "IslRaw_Space.ml" 46 3226 3326
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool)
  Ctypes.fn
)
"IslRaw_Space.ml" 46 3226 3245 "IslRaw_Space.ml" 46 3226 3326
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> Unsigned.uint -> bool
)
"IslRaw_Space.ml" 48 3447 3451 "IslRaw_Space.ml" 48 3447 3463
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> string option
)
ident(
  def get_dim_name "IslRaw_Space.ml" 51 3667 3667 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 48 3447 3466 "IslRaw_Space.ml" 48 3447 3473
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> string option)
  Ctypes.fn ->
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> string option
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 48 3447 3474 "IslRaw_Space.ml" 48 3447 3498
type(
  string
)
"IslRaw_Space.ml" 48 3447 3500 "IslRaw_Space.ml" 48 3447 3505
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 48 3447 3506 "IslRaw_Space.ml" 48 3447 3509
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> string option) Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> string option)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 48 3447 3510 "IslRaw_Space.ml" 48 3447 3518
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 48 3447 3519 "IslRaw_Space.ml" 48 3447 3522
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint -> string option) Ctypes.fn ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> string option) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 48 3447 3523 "IslRaw_Space.ml" 48 3447 3527
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 48 3447 3528 "IslRaw_Space.ml" 48 3447 3531
type(
  Unsigned.uint Ctypes.typ ->
  string option Ctypes.fn -> (Unsigned.uint -> string option) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 48 3447 3532 "IslRaw_Space.ml" 48 3447 3541
type(
  string option Ctypes.typ -> string option Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 48 3447 3542 "IslRaw_Space.ml" 48 3447 3552
type(
  string option Ctypes.typ
)
ident(
  ext_ref Ctypes.string_opt
)
"IslRaw_Space.ml" 48 3447 3532 "IslRaw_Space.ml" 48 3447 3552
call(
  stack
)
type(
  string option Ctypes.fn
)
"IslRaw_Space.ml" 48 3447 3523 "IslRaw_Space.ml" 48 3447 3552
call(
  stack
)
type(
  (Unsigned.uint -> string option) Ctypes.fn
)
"IslRaw_Space.ml" 48 3447 3510 "IslRaw_Space.ml" 48 3447 3552
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> Unsigned.uint -> string option) Ctypes.fn
)
"IslRaw_Space.ml" 48 3447 3499 "IslRaw_Space.ml" 48 3447 3553
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> string option)
  Ctypes.fn
)
"IslRaw_Space.ml" 48 3447 3466 "IslRaw_Space.ml" 48 3447 3553
call(
  stack
)
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> string option
)
"IslRaw_Space.ml" 51 3667 3671 "IslRaw_Space.ml" 51 3667 3685
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id -> int
)
ident(
  def find_dim_by_id "IslRaw_Space.ml" 53 3878 3878 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 51 3667 3688 "IslRaw_Space.ml" 51 3667 3695
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id -> int)
  Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id -> int
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 51 3667 3696 "IslRaw_Space.ml" 51 3667 3722
type(
  string
)
"IslRaw_Space.ml" 51 3667 3724 "IslRaw_Space.ml" 51 3667 3729
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 51 3667 3730 "IslRaw_Space.ml" 51 3667 3733
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> IslRaw_Types.id -> int) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id -> int)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 51 3667 3734 "IslRaw_Space.ml" 51 3667 3742
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 51 3667 3743 "IslRaw_Space.ml" 51 3667 3746
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (IslRaw_Types.id -> int) Ctypes.fn ->
  (IslRaw_Types.dim_type -> IslRaw_Types.id -> int) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 51 3667 3747 "IslRaw_Space.ml" 51 3667 3749
type(
  IslRaw_Types.id Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.id
)
"IslRaw_Space.ml" 51 3667 3750 "IslRaw_Space.ml" 51 3667 3753
type(
  IslRaw_Types.id Ctypes.typ ->
  int Ctypes.fn -> (IslRaw_Types.id -> int) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 51 3667 3754 "IslRaw_Space.ml" 51 3667 3763
type(
  int Ctypes.typ -> int Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 51 3667 3764 "IslRaw_Space.ml" 51 3667 3767
type(
  int Ctypes.typ
)
ident(
  ext_ref Ctypes.int
)
"IslRaw_Space.ml" 51 3667 3754 "IslRaw_Space.ml" 51 3667 3767
call(
  stack
)
type(
  int Ctypes.fn
)
"IslRaw_Space.ml" 51 3667 3747 "IslRaw_Space.ml" 51 3667 3767
call(
  stack
)
type(
  (IslRaw_Types.id -> int) Ctypes.fn
)
"IslRaw_Space.ml" 51 3667 3734 "IslRaw_Space.ml" 51 3667 3767
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> IslRaw_Types.id -> int) Ctypes.fn
)
"IslRaw_Space.ml" 51 3667 3723 "IslRaw_Space.ml" 51 3667 3768
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id -> int)
  Ctypes.fn
)
"IslRaw_Space.ml" 51 3667 3688 "IslRaw_Space.ml" 51 3667 3768
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id -> int
)
"IslRaw_Space.ml" 53 3878 3882 "IslRaw_Space.ml" 53 3878 3898
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> string -> int
)
ident(
  def find_dim_by_name "IslRaw_Space.ml" 56 4117 4117 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 53 3878 3901 "IslRaw_Space.ml" 53 3878 3908
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> string -> int) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> string -> int
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 53 3878 3909 "IslRaw_Space.ml" 53 3878 3937
type(
  string
)
"IslRaw_Space.ml" 53 3878 3939 "IslRaw_Space.ml" 53 3878 3944
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 53 3878 3945 "IslRaw_Space.ml" 53 3878 3948
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> string -> int) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> string -> int) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 53 3878 3949 "IslRaw_Space.ml" 53 3878 3957
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 53 3878 3958 "IslRaw_Space.ml" 53 3878 3961
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (string -> int) Ctypes.fn ->
  (IslRaw_Types.dim_type -> string -> int) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 53 3878 3962 "IslRaw_Space.ml" 53 3878 3968
type(
  string Ctypes.typ
)
ident(
  ext_ref Ctypes.string
)
"IslRaw_Space.ml" 53 3878 3969 "IslRaw_Space.ml" 53 3878 3972
type(
  string Ctypes.typ -> int Ctypes.fn -> (string -> int) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 53 3878 3973 "IslRaw_Space.ml" 53 3878 3982
type(
  int Ctypes.typ -> int Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 53 3878 3983 "IslRaw_Space.ml" 53 3878 3986
type(
  int Ctypes.typ
)
ident(
  ext_ref Ctypes.int
)
"IslRaw_Space.ml" 53 3878 3973 "IslRaw_Space.ml" 53 3878 3986
call(
  stack
)
type(
  int Ctypes.fn
)
"IslRaw_Space.ml" 53 3878 3962 "IslRaw_Space.ml" 53 3878 3986
call(
  stack
)
type(
  (string -> int) Ctypes.fn
)
"IslRaw_Space.ml" 53 3878 3949 "IslRaw_Space.ml" 53 3878 3986
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> string -> int) Ctypes.fn
)
"IslRaw_Space.ml" 53 3878 3938 "IslRaw_Space.ml" 53 3878 3987
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> string -> int) Ctypes.fn
)
"IslRaw_Space.ml" 53 3878 3901 "IslRaw_Space.ml" 53 3878 3987
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> string -> int
)
"IslRaw_Space.ml" 56 4117 4121 "IslRaw_Space.ml" 56 4117 4133
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> IslRaw_Types.id -> IslRaw_Types.space
)
ident(
  def set_tuple_id "IslRaw_Space.ml" 58 4324 4324 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 56 4117 4136 "IslRaw_Space.ml" 56 4117 4143
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> IslRaw_Types.id -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> IslRaw_Types.id -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 56 4117 4144 "IslRaw_Space.ml" 56 4117 4168
type(
  string
)
"IslRaw_Space.ml" 56 4117 4170 "IslRaw_Space.ml" 56 4117 4175
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 56 4117 4176 "IslRaw_Space.ml" 56 4117 4179
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> IslRaw_Types.id -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 56 4117 4180 "IslRaw_Space.ml" 56 4117 4188
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 56 4117 4189 "IslRaw_Space.ml" 56 4117 4192
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.dim_type -> IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 56 4117 4193 "IslRaw_Space.ml" 56 4117 4195
type(
  IslRaw_Types.id Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.id
)
"IslRaw_Space.ml" 56 4117 4196 "IslRaw_Space.ml" 56 4117 4199
type(
  IslRaw_Types.id Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 56 4117 4200 "IslRaw_Space.ml" 56 4117 4209
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 56 4117 4210 "IslRaw_Space.ml" 56 4117 4215
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 56 4117 4200 "IslRaw_Space.ml" 56 4117 4215
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 56 4117 4193 "IslRaw_Space.ml" 56 4117 4215
call(
  stack
)
type(
  (IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 56 4117 4180 "IslRaw_Space.ml" 56 4117 4215
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> IslRaw_Types.id -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 56 4117 4169 "IslRaw_Space.ml" 56 4117 4216
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> IslRaw_Types.id -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 56 4117 4136 "IslRaw_Space.ml" 56 4117 4216
call(
  stack
)
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> IslRaw_Types.id -> IslRaw_Types.space
)
"IslRaw_Space.ml" 58 4324 4328 "IslRaw_Space.ml" 58 4324 4342
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.space
)
ident(
  def reset_tuple_id "IslRaw_Space.ml" 60 4508 4508 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 58 4324 4345 "IslRaw_Space.ml" 58 4324 4352
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 58 4324 4353 "IslRaw_Space.ml" 58 4324 4379
type(
  string
)
"IslRaw_Space.ml" 58 4324 4381 "IslRaw_Space.ml" 58 4324 4386
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 58 4324 4387 "IslRaw_Space.ml" 58 4324 4390
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 58 4324 4391 "IslRaw_Space.ml" 58 4324 4399
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 58 4324 4400 "IslRaw_Space.ml" 58 4324 4403
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.dim_type -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 58 4324 4404 "IslRaw_Space.ml" 58 4324 4413
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 58 4324 4414 "IslRaw_Space.ml" 58 4324 4419
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 58 4324 4404 "IslRaw_Space.ml" 58 4324 4419
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 58 4324 4391 "IslRaw_Space.ml" 58 4324 4419
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 58 4324 4380 "IslRaw_Space.ml" 58 4324 4420
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 58 4324 4345 "IslRaw_Space.ml" 58 4324 4420
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.space
)
"IslRaw_Space.ml" 60 4508 4512 "IslRaw_Space.ml" 60 4508 4524
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> bool
)
ident(
  def has_tuple_id "IslRaw_Space.ml" 62 4702 4702 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 60 4508 4527 "IslRaw_Space.ml" 60 4508 4534
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> bool) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 60 4508 4535 "IslRaw_Space.ml" 60 4508 4559
type(
  string
)
"IslRaw_Space.ml" 60 4508 4561 "IslRaw_Space.ml" 60 4508 4566
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 60 4508 4567 "IslRaw_Space.ml" 60 4508 4570
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> bool) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 60 4508 4571 "IslRaw_Space.ml" 60 4508 4579
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 60 4508 4580 "IslRaw_Space.ml" 60 4508 4583
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  bool Ctypes.fn -> (IslRaw_Types.dim_type -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 60 4508 4584 "IslRaw_Space.ml" 60 4508 4593
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 60 4508 4594 "IslRaw_Space.ml" 60 4508 4598
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 60 4508 4584 "IslRaw_Space.ml" 60 4508 4598
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 60 4508 4571 "IslRaw_Space.ml" 60 4508 4598
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 60 4508 4560 "IslRaw_Space.ml" 60 4508 4599
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 60 4508 4527 "IslRaw_Space.ml" 60 4508 4599
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> bool
)
"IslRaw_Space.ml" 62 4702 4706 "IslRaw_Space.ml" 62 4702 4718
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id
)
ident(
  def get_tuple_id "IslRaw_Space.ml" 64 4914 4914 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 62 4702 4721 "IslRaw_Space.ml" 62 4702 4728
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 62 4702 4729 "IslRaw_Space.ml" 62 4702 4753
type(
  string
)
"IslRaw_Space.ml" 62 4702 4755 "IslRaw_Space.ml" 62 4702 4760
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 62 4702 4761 "IslRaw_Space.ml" 62 4702 4764
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> IslRaw_Types.id) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 62 4702 4765 "IslRaw_Space.ml" 62 4702 4773
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 62 4702 4774 "IslRaw_Space.ml" 62 4702 4777
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  IslRaw_Types.id Ctypes.fn ->
  (IslRaw_Types.dim_type -> IslRaw_Types.id) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 62 4702 4778 "IslRaw_Space.ml" 62 4702 4787
type(
  IslRaw_Types.id Ctypes.typ -> IslRaw_Types.id Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 62 4702 4788 "IslRaw_Space.ml" 62 4702 4790
type(
  IslRaw_Types.id Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.id
)
"IslRaw_Space.ml" 62 4702 4778 "IslRaw_Space.ml" 62 4702 4790
call(
  stack
)
type(
  IslRaw_Types.id Ctypes.fn
)
"IslRaw_Space.ml" 62 4702 4765 "IslRaw_Space.ml" 62 4702 4790
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> IslRaw_Types.id) Ctypes.fn
)
"IslRaw_Space.ml" 62 4702 4754 "IslRaw_Space.ml" 62 4702 4791
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id) Ctypes.fn
)
"IslRaw_Space.ml" 62 4702 4721 "IslRaw_Space.ml" 62 4702 4791
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> IslRaw_Types.id
)
"IslRaw_Space.ml" 64 4914 4918 "IslRaw_Space.ml" 64 4914 4932
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> string -> IslRaw_Types.space
)
ident(
  def set_tuple_name "IslRaw_Space.ml" 66 5111 5111 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 64 4914 4935 "IslRaw_Space.ml" 64 4914 4942
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> string -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> string -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 64 4914 4943 "IslRaw_Space.ml" 64 4914 4969
type(
  string
)
"IslRaw_Space.ml" 64 4914 4971 "IslRaw_Space.ml" 64 4914 4976
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 64 4914 4977 "IslRaw_Space.ml" 64 4914 4980
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> string -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> string -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 64 4914 4981 "IslRaw_Space.ml" 64 4914 4989
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 64 4914 4990 "IslRaw_Space.ml" 64 4914 4993
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (string -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.dim_type -> string -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 64 4914 4994 "IslRaw_Space.ml" 64 4914 5000
type(
  string Ctypes.typ
)
ident(
  ext_ref Ctypes.string
)
"IslRaw_Space.ml" 64 4914 5001 "IslRaw_Space.ml" 64 4914 5004
type(
  string Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn -> (string -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 64 4914 5005 "IslRaw_Space.ml" 64 4914 5014
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 64 4914 5015 "IslRaw_Space.ml" 64 4914 5020
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 64 4914 5005 "IslRaw_Space.ml" 64 4914 5020
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 64 4914 4994 "IslRaw_Space.ml" 64 4914 5020
call(
  stack
)
type(
  (string -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 64 4914 4981 "IslRaw_Space.ml" 64 4914 5020
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> string -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 64 4914 4970 "IslRaw_Space.ml" 64 4914 5021
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> string -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 64 4914 4935 "IslRaw_Space.ml" 64 4914 5021
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> string -> IslRaw_Types.space
)
"IslRaw_Space.ml" 66 5111 5115 "IslRaw_Space.ml" 66 5111 5129
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> bool
)
ident(
  def has_tuple_name "IslRaw_Space.ml" 68 5304 5304 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 66 5111 5132 "IslRaw_Space.ml" 66 5111 5139
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> bool) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> bool
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 66 5111 5140 "IslRaw_Space.ml" 66 5111 5166
type(
  string
)
"IslRaw_Space.ml" 66 5111 5168 "IslRaw_Space.ml" 66 5111 5173
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 66 5111 5174 "IslRaw_Space.ml" 66 5111 5177
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> bool) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 66 5111 5178 "IslRaw_Space.ml" 66 5111 5186
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 66 5111 5187 "IslRaw_Space.ml" 66 5111 5190
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  bool Ctypes.fn -> (IslRaw_Types.dim_type -> bool) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 66 5111 5191 "IslRaw_Space.ml" 66 5111 5200
type(
  bool Ctypes.typ -> bool Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 66 5111 5201 "IslRaw_Space.ml" 66 5111 5205
type(
  bool Ctypes.typ
)
ident(
  ext_ref Ctypes.bool
)
"IslRaw_Space.ml" 66 5111 5191 "IslRaw_Space.ml" 66 5111 5205
call(
  stack
)
type(
  bool Ctypes.fn
)
"IslRaw_Space.ml" 66 5111 5178 "IslRaw_Space.ml" 66 5111 5205
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 66 5111 5167 "IslRaw_Space.ml" 66 5111 5206
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> bool) Ctypes.fn
)
"IslRaw_Space.ml" 66 5111 5132 "IslRaw_Space.ml" 66 5111 5206
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> bool
)
"IslRaw_Space.ml" 68 5304 5308 "IslRaw_Space.ml" 68 5304 5322
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> string option
)
ident(
  def get_tuple_name "IslRaw_Space.ml" 71 5482 5482 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 68 5304 5325 "IslRaw_Space.ml" 68 5304 5332
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> string option) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.dim_type -> string option
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 68 5304 5333 "IslRaw_Space.ml" 68 5304 5359
type(
  string
)
"IslRaw_Space.ml" 68 5304 5361 "IslRaw_Space.ml" 68 5304 5366
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 68 5304 5367 "IslRaw_Space.ml" 68 5304 5370
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> string option) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> string option) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 68 5304 5371 "IslRaw_Space.ml" 68 5304 5379
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 68 5304 5380 "IslRaw_Space.ml" 68 5304 5383
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  string option Ctypes.fn ->
  (IslRaw_Types.dim_type -> string option) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 68 5304 5384 "IslRaw_Space.ml" 68 5304 5393
type(
  string option Ctypes.typ -> string option Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 68 5304 5394 "IslRaw_Space.ml" 68 5304 5404
type(
  string option Ctypes.typ
)
ident(
  ext_ref Ctypes.string_opt
)
"IslRaw_Space.ml" 68 5304 5384 "IslRaw_Space.ml" 68 5304 5404
call(
  stack
)
type(
  string option Ctypes.fn
)
"IslRaw_Space.ml" 68 5304 5371 "IslRaw_Space.ml" 68 5304 5404
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> string option) Ctypes.fn
)
"IslRaw_Space.ml" 68 5304 5360 "IslRaw_Space.ml" 68 5304 5405
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.dim_type -> string option) Ctypes.fn
)
"IslRaw_Space.ml" 68 5304 5325 "IslRaw_Space.ml" 68 5304 5405
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.dim_type -> string option
)
"IslRaw_Space.ml" 71 5482 5486 "IslRaw_Space.ml" 71 5482 5492
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def domain "IslRaw_Space.ml" 73 5630 5630 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 71 5482 5495 "IslRaw_Space.ml" 71 5482 5502
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 71 5482 5503 "IslRaw_Space.ml" 71 5482 5521
type(
  string
)
"IslRaw_Space.ml" 71 5482 5523 "IslRaw_Space.ml" 71 5482 5528
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 71 5482 5529 "IslRaw_Space.ml" 71 5482 5532
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 71 5482 5533 "IslRaw_Space.ml" 71 5482 5542
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 71 5482 5543 "IslRaw_Space.ml" 71 5482 5548
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 71 5482 5533 "IslRaw_Space.ml" 71 5482 5548
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 71 5482 5522 "IslRaw_Space.ml" 71 5482 5549
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 71 5482 5495 "IslRaw_Space.ml" 71 5482 5549
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 73 5630 5634 "IslRaw_Space.ml" 73 5630 5645
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def from_domain "IslRaw_Space.ml" 75 5786 5786 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 73 5630 5648 "IslRaw_Space.ml" 73 5630 5655
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 73 5630 5656 "IslRaw_Space.ml" 73 5630 5679
type(
  string
)
"IslRaw_Space.ml" 73 5630 5681 "IslRaw_Space.ml" 73 5630 5686
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 73 5630 5687 "IslRaw_Space.ml" 73 5630 5690
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 73 5630 5691 "IslRaw_Space.ml" 73 5630 5700
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 73 5630 5701 "IslRaw_Space.ml" 73 5630 5706
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 73 5630 5691 "IslRaw_Space.ml" 73 5630 5706
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 73 5630 5680 "IslRaw_Space.ml" 73 5630 5707
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 73 5630 5648 "IslRaw_Space.ml" 73 5630 5707
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 75 5786 5790 "IslRaw_Space.ml" 75 5786 5795
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def range "IslRaw_Space.ml" 77 5939 5939 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 75 5786 5798 "IslRaw_Space.ml" 75 5786 5805
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 75 5786 5806 "IslRaw_Space.ml" 75 5786 5823
type(
  string
)
"IslRaw_Space.ml" 75 5786 5825 "IslRaw_Space.ml" 75 5786 5830
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 75 5786 5831 "IslRaw_Space.ml" 75 5786 5834
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 75 5786 5835 "IslRaw_Space.ml" 75 5786 5844
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 75 5786 5845 "IslRaw_Space.ml" 75 5786 5850
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 75 5786 5835 "IslRaw_Space.ml" 75 5786 5850
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 75 5786 5824 "IslRaw_Space.ml" 75 5786 5851
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 75 5786 5798 "IslRaw_Space.ml" 75 5786 5851
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 77 5939 5943 "IslRaw_Space.ml" 77 5939 5953
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def from_range "IslRaw_Space.ml" 79 6106 6106 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 77 5939 5956 "IslRaw_Space.ml" 77 5939 5963
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 77 5939 5964 "IslRaw_Space.ml" 77 5939 5986
type(
  string
)
"IslRaw_Space.ml" 77 5939 5988 "IslRaw_Space.ml" 77 5939 5993
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 77 5939 5994 "IslRaw_Space.ml" 77 5939 5997
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 77 5939 5998 "IslRaw_Space.ml" 77 5939 6007
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 77 5939 6008 "IslRaw_Space.ml" 77 5939 6013
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 77 5939 5998 "IslRaw_Space.ml" 77 5939 6013
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 77 5939 5987 "IslRaw_Space.ml" 77 5939 6014
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 77 5939 5956 "IslRaw_Space.ml" 77 5939 6014
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 79 6106 6110 "IslRaw_Space.ml" 79 6106 6120
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def domain_map "IslRaw_Space.ml" 81 6272 6272 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 79 6106 6123 "IslRaw_Space.ml" 79 6106 6130
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 79 6106 6131 "IslRaw_Space.ml" 79 6106 6153
type(
  string
)
"IslRaw_Space.ml" 79 6106 6155 "IslRaw_Space.ml" 79 6106 6160
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 79 6106 6161 "IslRaw_Space.ml" 79 6106 6164
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 79 6106 6165 "IslRaw_Space.ml" 79 6106 6174
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 79 6106 6175 "IslRaw_Space.ml" 79 6106 6180
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 79 6106 6165 "IslRaw_Space.ml" 79 6106 6180
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 79 6106 6154 "IslRaw_Space.ml" 79 6106 6181
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 79 6106 6123 "IslRaw_Space.ml" 79 6106 6181
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 81 6272 6276 "IslRaw_Space.ml" 81 6272 6285
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def range_map "IslRaw_Space.ml" 83 6437 6437 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 81 6272 6288 "IslRaw_Space.ml" 81 6272 6295
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 81 6272 6296 "IslRaw_Space.ml" 81 6272 6317
type(
  string
)
"IslRaw_Space.ml" 81 6272 6319 "IslRaw_Space.ml" 81 6272 6324
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 81 6272 6325 "IslRaw_Space.ml" 81 6272 6328
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 81 6272 6329 "IslRaw_Space.ml" 81 6272 6338
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 81 6272 6339 "IslRaw_Space.ml" 81 6272 6344
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 81 6272 6329 "IslRaw_Space.ml" 81 6272 6344
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 81 6272 6318 "IslRaw_Space.ml" 81 6272 6345
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 81 6272 6288 "IslRaw_Space.ml" 81 6272 6345
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 83 6437 6441 "IslRaw_Space.ml" 83 6437 6447
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def params "IslRaw_Space.ml" 85 6609 6609 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 83 6437 6450 "IslRaw_Space.ml" 83 6437 6457
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 83 6437 6458 "IslRaw_Space.ml" 83 6437 6476
type(
  string
)
"IslRaw_Space.ml" 83 6437 6478 "IslRaw_Space.ml" 83 6437 6483
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 83 6437 6484 "IslRaw_Space.ml" 83 6437 6487
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 83 6437 6488 "IslRaw_Space.ml" 83 6437 6497
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 83 6437 6498 "IslRaw_Space.ml" 83 6437 6503
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 83 6437 6488 "IslRaw_Space.ml" 83 6437 6503
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 83 6437 6477 "IslRaw_Space.ml" 83 6437 6504
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 83 6437 6450 "IslRaw_Space.ml" 83 6437 6504
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 85 6609 6613 "IslRaw_Space.ml" 85 6609 6628
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def set_from_params "IslRaw_Space.ml" 87 6795 6795 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 85 6609 6631 "IslRaw_Space.ml" 85 6609 6638
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 85 6609 6639 "IslRaw_Space.ml" 85 6609 6666
type(
  string
)
"IslRaw_Space.ml" 85 6609 6668 "IslRaw_Space.ml" 85 6609 6673
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 85 6609 6674 "IslRaw_Space.ml" 85 6609 6677
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 85 6609 6678 "IslRaw_Space.ml" 85 6609 6687
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 85 6609 6688 "IslRaw_Space.ml" 85 6609 6693
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 85 6609 6678 "IslRaw_Space.ml" 85 6609 6693
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 85 6609 6667 "IslRaw_Space.ml" 85 6609 6694
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 85 6609 6631 "IslRaw_Space.ml" 85 6609 6694
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 87 6795 6799 "IslRaw_Space.ml" 87 6795 6806
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def reverse "IslRaw_Space.ml" 89 6989 6989 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 87 6795 6809 "IslRaw_Space.ml" 87 6795 6816
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 87 6795 6817 "IslRaw_Space.ml" 87 6795 6836
type(
  string
)
"IslRaw_Space.ml" 87 6795 6838 "IslRaw_Space.ml" 87 6795 6843
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 87 6795 6844 "IslRaw_Space.ml" 87 6795 6847
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 87 6795 6848 "IslRaw_Space.ml" 87 6795 6857
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 87 6795 6858 "IslRaw_Space.ml" 87 6795 6863
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 87 6795 6848 "IslRaw_Space.ml" 87 6795 6863
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 87 6795 6837 "IslRaw_Space.ml" 87 6795 6864
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 87 6795 6809 "IslRaw_Space.ml" 87 6795 6864
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 89 6989 6993 "IslRaw_Space.ml" 89 6989 6997
type(
  IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def join "IslRaw_Space.ml" 91 7175 7175 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 89 6989 7000 "IslRaw_Space.ml" 89 6989 7007
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 89 6989 7008 "IslRaw_Space.ml" 89 6989 7024
type(
  string
)
"IslRaw_Space.ml" 89 6989 7026 "IslRaw_Space.ml" 89 6989 7031
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 89 6989 7032 "IslRaw_Space.ml" 89 6989 7035
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 89 6989 7036 "IslRaw_Space.ml" 89 6989 7041
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 89 6989 7042 "IslRaw_Space.ml" 89 6989 7045
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 89 6989 7046 "IslRaw_Space.ml" 89 6989 7055
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 89 6989 7056 "IslRaw_Space.ml" 89 6989 7061
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 89 6989 7046 "IslRaw_Space.ml" 89 6989 7061
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 89 6989 7036 "IslRaw_Space.ml" 89 6989 7061
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 89 6989 7025 "IslRaw_Space.ml" 89 6989 7062
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 89 6989 7000 "IslRaw_Space.ml" 89 6989 7062
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 91 7175 7179 "IslRaw_Space.ml" 91 7175 7191
type(
  IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def align_params "IslRaw_Space.ml" 93 7399 7399 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 91 7175 7194 "IslRaw_Space.ml" 91 7175 7201
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 91 7175 7202 "IslRaw_Space.ml" 91 7175 7226
type(
  string
)
"IslRaw_Space.ml" 91 7175 7228 "IslRaw_Space.ml" 91 7175 7233
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 91 7175 7234 "IslRaw_Space.ml" 91 7175 7237
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 91 7175 7238 "IslRaw_Space.ml" 91 7175 7243
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 91 7175 7244 "IslRaw_Space.ml" 91 7175 7247
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 91 7175 7248 "IslRaw_Space.ml" 91 7175 7257
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 91 7175 7258 "IslRaw_Space.ml" 91 7175 7263
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 91 7175 7248 "IslRaw_Space.ml" 91 7175 7263
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 91 7175 7238 "IslRaw_Space.ml" 91 7175 7263
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 91 7175 7227 "IslRaw_Space.ml" 91 7175 7264
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 91 7175 7194 "IslRaw_Space.ml" 91 7175 7264
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 93 7399 7403 "IslRaw_Space.ml" 93 7399 7414
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  def insert_dims "IslRaw_Space.ml" 95 7621 7621 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 93 7399 7417 "IslRaw_Space.ml" 93 7399 7424
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 93 7399 7425 "IslRaw_Space.ml" 93 7399 7448
type(
  string
)
"IslRaw_Space.ml" 93 7399 7450 "IslRaw_Space.ml" 93 7399 7455
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 93 7399 7456 "IslRaw_Space.ml" 93 7399 7459
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 93 7399 7460 "IslRaw_Space.ml" 93 7399 7468
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 93 7399 7469 "IslRaw_Space.ml" 93 7399 7472
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 93 7399 7473 "IslRaw_Space.ml" 93 7399 7477
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 93 7399 7478 "IslRaw_Space.ml" 93 7399 7481
type(
  Unsigned.uint Ctypes.typ ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 93 7399 7482 "IslRaw_Space.ml" 93 7399 7486
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 93 7399 7487 "IslRaw_Space.ml" 93 7399 7490
type(
  Unsigned.uint Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 93 7399 7491 "IslRaw_Space.ml" 93 7399 7500
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 93 7399 7501 "IslRaw_Space.ml" 93 7399 7506
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 93 7399 7491 "IslRaw_Space.ml" 93 7399 7506
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 93 7399 7482 "IslRaw_Space.ml" 93 7399 7506
call(
  stack
)
type(
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 93 7399 7473 "IslRaw_Space.ml" 93 7399 7506
call(
  stack
)
type(
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 93 7399 7460 "IslRaw_Space.ml" 93 7399 7506
call(
  stack
)
type(
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 93 7399 7449 "IslRaw_Space.ml" 93 7399 7507
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 93 7399 7417 "IslRaw_Space.ml" 93 7399 7507
call(
  stack
)
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
"IslRaw_Space.ml" 95 7621 7625 "IslRaw_Space.ml" 95 7621 7633
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  def add_dims "IslRaw_Space.ml" 97 7845 7845 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 95 7621 7636 "IslRaw_Space.ml" 95 7621 7643
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 95 7621 7644 "IslRaw_Space.ml" 95 7621 7664
type(
  string
)
"IslRaw_Space.ml" 95 7621 7666 "IslRaw_Space.ml" 95 7621 7671
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 95 7621 7672 "IslRaw_Space.ml" 95 7621 7675
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 95 7621 7676 "IslRaw_Space.ml" 95 7621 7684
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 95 7621 7685 "IslRaw_Space.ml" 95 7621 7688
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 95 7621 7689 "IslRaw_Space.ml" 95 7621 7693
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 95 7621 7694 "IslRaw_Space.ml" 95 7621 7697
type(
  Unsigned.uint Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 95 7621 7698 "IslRaw_Space.ml" 95 7621 7707
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 95 7621 7708 "IslRaw_Space.ml" 95 7621 7713
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 95 7621 7698 "IslRaw_Space.ml" 95 7621 7713
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 95 7621 7689 "IslRaw_Space.ml" 95 7621 7713
call(
  stack
)
type(
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 95 7621 7676 "IslRaw_Space.ml" 95 7621 7713
call(
  stack
)
type(
  (IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 95 7621 7665 "IslRaw_Space.ml" 95 7621 7714
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 95 7621 7636 "IslRaw_Space.ml" 95 7621 7714
call(
  stack
)
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type -> Unsigned.uint -> IslRaw_Types.space
)
"IslRaw_Space.ml" 97 7845 7849 "IslRaw_Space.ml" 97 7845 7858
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  def drop_dims "IslRaw_Space.ml" 99 8132 8132 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 97 7845 7861 "IslRaw_Space.ml" 97 7845 7868
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 97 7845 7869 "IslRaw_Space.ml" 97 7845 7890
type(
  string
)
"IslRaw_Space.ml" 97 7845 7892 "IslRaw_Space.ml" 97 7845 7897
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 97 7845 7898 "IslRaw_Space.ml" 97 7845 7901
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 97 7845 7902 "IslRaw_Space.ml" 97 7845 7910
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 97 7845 7911 "IslRaw_Space.ml" 97 7845 7914
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 97 7845 7915 "IslRaw_Space.ml" 97 7845 7919
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 97 7845 7920 "IslRaw_Space.ml" 97 7845 7923
type(
  Unsigned.uint Ctypes.typ ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 97 7845 7924 "IslRaw_Space.ml" 97 7845 7928
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 97 7845 7929 "IslRaw_Space.ml" 97 7845 7932
type(
  Unsigned.uint Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 97 7845 7933 "IslRaw_Space.ml" 97 7845 7942
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 97 7845 7943 "IslRaw_Space.ml" 97 7845 7948
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 97 7845 7933 "IslRaw_Space.ml" 97 7845 7948
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 97 7845 7924 "IslRaw_Space.ml" 97 7845 7948
call(
  stack
)
type(
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 97 7845 7915 "IslRaw_Space.ml" 97 7845 7948
call(
  stack
)
type(
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 97 7845 7902 "IslRaw_Space.ml" 97 7845 7948
call(
  stack
)
type(
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 97 7845 7891 "IslRaw_Space.ml" 97 7845 7949
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 97 7845 7861 "IslRaw_Space.ml" 97 7845 7949
call(
  stack
)
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
"IslRaw_Space.ml" 99 8132 8136 "IslRaw_Space.ml" 99 8132 8145
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  def move_dims "IslRaw_Space.ml" 101 8340 8340 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 99 8132 8148 "IslRaw_Space.ml" 99 8132 8155
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 99 8132 8156 "IslRaw_Space.ml" 99 8132 8177
type(
  string
)
"IslRaw_Space.ml" 99 8132 8179 "IslRaw_Space.ml" 99 8132 8184
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 99 8132 8185 "IslRaw_Space.ml" 99 8132 8188
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.dim_type ->
   Unsigned.uint ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 99 8132 8189 "IslRaw_Space.ml" 99 8132 8197
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 99 8132 8198 "IslRaw_Space.ml" 99 8132 8201
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  (IslRaw_Types.dim_type ->
   Unsigned.uint ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 99 8132 8202 "IslRaw_Space.ml" 99 8132 8206
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 99 8132 8207 "IslRaw_Space.ml" 99 8132 8210
type(
  Unsigned.uint Ctypes.typ ->
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn ->
  (Unsigned.uint ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 99 8132 8211 "IslRaw_Space.ml" 99 8132 8219
type(
  IslRaw_Types.dim_type Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.dim_type
)
"IslRaw_Space.ml" 99 8132 8220 "IslRaw_Space.ml" 99 8132 8223
type(
  IslRaw_Types.dim_type Ctypes.typ ->
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 99 8132 8224 "IslRaw_Space.ml" 99 8132 8228
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 99 8132 8229 "IslRaw_Space.ml" 99 8132 8232
type(
  Unsigned.uint Ctypes.typ ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn ->
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 99 8132 8233 "IslRaw_Space.ml" 99 8132 8237
type(
  Unsigned.uint Ctypes.typ
)
ident(
  ext_ref Ctypes.uint
)
"IslRaw_Space.ml" 99 8132 8238 "IslRaw_Space.ml" 99 8132 8241
type(
  Unsigned.uint Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 99 8132 8242 "IslRaw_Space.ml" 99 8132 8251
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 99 8132 8252 "IslRaw_Space.ml" 99 8132 8257
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 99 8132 8242 "IslRaw_Space.ml" 99 8132 8257
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 99 8132 8233 "IslRaw_Space.ml" 99 8132 8257
call(
  stack
)
type(
  (Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 99 8132 8224 "IslRaw_Space.ml" 99 8132 8257
call(
  stack
)
type(
  (Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 99 8132 8211 "IslRaw_Space.ml" 99 8132 8257
call(
  stack
)
type(
  (IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 99 8132 8202 "IslRaw_Space.ml" 99 8132 8257
call(
  stack
)
type(
  (Unsigned.uint ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 99 8132 8189 "IslRaw_Space.ml" 99 8132 8257
call(
  stack
)
type(
  (IslRaw_Types.dim_type ->
   Unsigned.uint ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 99 8132 8178 "IslRaw_Space.ml" 99 8132 8258
call(
  stack
)
type(
  (IslRaw_Types.space ->
   IslRaw_Types.dim_type ->
   Unsigned.uint ->
   IslRaw_Types.dim_type ->
   Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space)
  Ctypes.fn
)
"IslRaw_Space.ml" 99 8132 8148 "IslRaw_Space.ml" 99 8132 8258
call(
  stack
)
type(
  IslRaw_Types.space ->
  IslRaw_Types.dim_type ->
  Unsigned.uint ->
  IslRaw_Types.dim_type ->
  Unsigned.uint -> Unsigned.uint -> IslRaw_Types.space
)
"IslRaw_Space.ml" 101 8340 8344 "IslRaw_Space.ml" 101 8340 8356
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def map_from_set "IslRaw_Space.ml" 103 8543 8543 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 101 8340 8359 "IslRaw_Space.ml" 101 8340 8366
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 101 8340 8367 "IslRaw_Space.ml" 101 8340 8391
type(
  string
)
"IslRaw_Space.ml" 101 8340 8393 "IslRaw_Space.ml" 101 8340 8398
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 101 8340 8399 "IslRaw_Space.ml" 101 8340 8402
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 101 8340 8403 "IslRaw_Space.ml" 101 8340 8412
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 101 8340 8413 "IslRaw_Space.ml" 101 8340 8418
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 101 8340 8403 "IslRaw_Space.ml" 101 8340 8418
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 101 8340 8392 "IslRaw_Space.ml" 101 8340 8419
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 101 8340 8359 "IslRaw_Space.ml" 101 8340 8419
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 103 8543 8547 "IslRaw_Space.ml" 103 8543 8572
type(
  IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def map_from_domain_and_range "IslRaw_Space.ml" 105 8731 8731 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 103 8543 8575 "IslRaw_Space.ml" 103 8543 8582
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 103 8543 8583 "IslRaw_Space.ml" 103 8543 8620
type(
  string
)
"IslRaw_Space.ml" 103 8543 8622 "IslRaw_Space.ml" 103 8543 8627
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 103 8543 8628 "IslRaw_Space.ml" 103 8543 8631
type(
  IslRaw_Types.space Ctypes.typ ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 103 8543 8632 "IslRaw_Space.ml" 103 8543 8637
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 103 8543 8638 "IslRaw_Space.ml" 103 8543 8641
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 103 8543 8642 "IslRaw_Space.ml" 103 8543 8651
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 103 8543 8652 "IslRaw_Space.ml" 103 8543 8657
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 103 8543 8642 "IslRaw_Space.ml" 103 8543 8657
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 103 8543 8632 "IslRaw_Space.ml" 103 8543 8657
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 103 8543 8621 "IslRaw_Space.ml" 103 8543 8658
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 103 8543 8575 "IslRaw_Space.ml" 103 8543 8658
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 105 8731 8735 "IslRaw_Space.ml" 105 8731 8738
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def zip "IslRaw_Space.ml" 107 8867 8867 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 105 8731 8741 "IslRaw_Space.ml" 105 8731 8748
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 105 8731 8749 "IslRaw_Space.ml" 105 8731 8764
type(
  string
)
"IslRaw_Space.ml" 105 8731 8766 "IslRaw_Space.ml" 105 8731 8771
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 105 8731 8772 "IslRaw_Space.ml" 105 8731 8775
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 105 8731 8776 "IslRaw_Space.ml" 105 8731 8785
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 105 8731 8786 "IslRaw_Space.ml" 105 8731 8791
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 105 8731 8776 "IslRaw_Space.ml" 105 8731 8791
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 105 8731 8765 "IslRaw_Space.ml" 105 8731 8792
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 105 8731 8741 "IslRaw_Space.ml" 105 8731 8792
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 107 8867 8871 "IslRaw_Space.ml" 107 8867 8876
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def curry "IslRaw_Space.ml" 109 9009 9009 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 107 8867 8879 "IslRaw_Space.ml" 107 8867 8886
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 107 8867 8887 "IslRaw_Space.ml" 107 8867 8904
type(
  string
)
"IslRaw_Space.ml" 107 8867 8906 "IslRaw_Space.ml" 107 8867 8911
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 107 8867 8912 "IslRaw_Space.ml" 107 8867 8915
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 107 8867 8916 "IslRaw_Space.ml" 107 8867 8925
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 107 8867 8926 "IslRaw_Space.ml" 107 8867 8931
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 107 8867 8916 "IslRaw_Space.ml" 107 8867 8931
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 107 8867 8905 "IslRaw_Space.ml" 107 8867 8932
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 107 8867 8879 "IslRaw_Space.ml" 107 8867 8932
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
"IslRaw_Space.ml" 109 9009 9013 "IslRaw_Space.ml" 109 9009 9020
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  def uncurry "IslRaw_Space.ml" 109 9009 9078 "IslRaw_Space.ml" 1 0 -1
)
"IslRaw_Space.ml" 109 9009 9023 "IslRaw_Space.ml" 109 9009 9030
type(
  ?abi:Libffi_abi.abi ->
  ?from:Dl.library ->
  ?stub:bool ->
  ?check_errno:bool ->
  ?release_runtime_lock:bool ->
  string ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn ->
  IslRaw_Types.space -> IslRaw_Types.space
)
ident(
  ext_ref Foreign.foreign
)
"IslRaw_Space.ml" 109 9009 9031 "IslRaw_Space.ml" 109 9009 9050
type(
  string
)
"IslRaw_Space.ml" 109 9009 9052 "IslRaw_Space.ml" 109 9009 9057
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 109 9009 9058 "IslRaw_Space.ml" 109 9009 9061
type(
  IslRaw_Types.space Ctypes.typ ->
  IslRaw_Types.space Ctypes.fn ->
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
ident(
  ext_ref Ctypes.( @-> )
)
"IslRaw_Space.ml" 109 9009 9062 "IslRaw_Space.ml" 109 9009 9071
type(
  IslRaw_Types.space Ctypes.typ -> IslRaw_Types.space Ctypes.fn
)
ident(
  ext_ref Ctypes.returning
)
"IslRaw_Space.ml" 109 9009 9072 "IslRaw_Space.ml" 109 9009 9077
type(
  IslRaw_Types.space Ctypes.typ
)
ident(
  ext_ref IslRaw_Types.space
)
"IslRaw_Space.ml" 109 9009 9062 "IslRaw_Space.ml" 109 9009 9077
call(
  stack
)
type(
  IslRaw_Types.space Ctypes.fn
)
"IslRaw_Space.ml" 109 9009 9051 "IslRaw_Space.ml" 109 9009 9078
call(
  stack
)
type(
  (IslRaw_Types.space -> IslRaw_Types.space) Ctypes.fn
)
"IslRaw_Space.ml" 109 9009 9023 "IslRaw_Space.ml" 109 9009 9078
call(
  stack
)
type(
  IslRaw_Types.space -> IslRaw_Types.space
)
