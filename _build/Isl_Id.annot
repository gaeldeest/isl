"Isl_Id.ml" 7 110 116 "Isl_Id.ml" 7 110 120
type(
  string -> IslRaw_Types.id
)
ident(
  def make "Isl_Id.ml" 7 110 177 "Isl_Id.ml" 8 178 181
)
"Isl_Id.ml" 7 110 121 "Isl_Id.ml" 7 110 125
type(
  string
)
ident(
  def name "Isl_Id.ml" 7 110 128 "Isl_Id.ml" 7 110 177
)
"Isl_Id.ml" 7 110 128 "Isl_Id.ml" 7 110 132
type(
  (IslRaw_Types.id -> unit) -> IslRaw_Types.id -> IslRaw_Types.id
)
ident(
  ext_ref Isl_Utils.wrap
)
"Isl_Id.ml" 7 110 133 "Isl_Id.ml" 7 110 140
type(
  IslRaw_Types.id -> unit
)
ident(
  ext_ref IslRaw.Id.free
)
"Isl_Id.ml" 7 110 128 "Isl_Id.ml" 7 110 140
type(
  IslRaw_Types.id -> IslRaw_Types.id
)
"Isl_Id.ml" 7 110 141 "Isl_Id.ml" 7 110 143
type(
  (IslRaw_Types.id -> IslRaw_Types.id) -> IslRaw_Types.id -> IslRaw_Types.id
)
ident(
  ext_ref Pervasives.( @@ )
)
"Isl_Id.ml" 7 110 144 "Isl_Id.ml" 7 110 152
type(
  IslRaw.ctx -> string -> unit Ctypes_static.ptr -> IslRaw_Types.id
)
ident(
  ext_ref IslRaw.Id.alloc
)
"Isl_Id.ml" 7 110 153 "Isl_Id.ml" 7 110 160
type(
  IslRaw.ctx
)
ident(
  ext_ref CTX.ctx
)
"Isl_Id.ml" 7 110 161 "Isl_Id.ml" 7 110 165
type(
  string
)
ident(
  int_ref name "Isl_Id.ml" 7 110 121 "Isl_Id.ml" 7 110 125
)
"Isl_Id.ml" 7 110 166 "Isl_Id.ml" 7 110 177
type(
  unit Ctypes.ptr
)
ident(
  ext_ref Ctypes.null
)
"Isl_Id.ml" 7 110 144 "Isl_Id.ml" 7 110 177
call(
  stack
)
type(
  IslRaw_Types.id
)
"Isl_Id.ml" 7 110 128 "Isl_Id.ml" 7 110 177
call(
  tail
)
type(
  IslRaw_Types.id
)
